# This chunk provides an example of some things you can do with RMarkdown to make your report creation process easier
# read in the data
black_saber_current_employees <- read_csv("data/black-saber-current-employees.csv")
library(tidyverse)
# this should supress all code and messages
knitr::opts_chunk$set(include=FALSE)
# This chunk provides an example of some things you can do with RMarkdown to make your report creation process easier
# read in the data
black_saber_current_employees <- read_csv("data/black-saber-current-employees.csv")
# create a visualisation
my_plot <- black_saber_current_employees %>%
ggplot(aes(x = productivity)) +
geom_histogram(colour = "grey", fill = "#6C3082") +
theme_minimal() +
labs(title = "Look! A title. But do you want a title or a caption for your report?", x = "This is a changed x label")
# save your plot in your images folder, you can specify the height and width, too
# saving this means you can add the image to your exectuve summary without having to run or rerun the code, if you wish
ggsave("images/example.png", width = 7, height = 4)
# norice how the image is included with the ![](file/path.png) below
black_saber_current_employees
final_hires
black_saber_current_employees <- read_csv("data/black-saber-current-employees.csv")
final_hires <- read_csv("data/final-hires-newgrad_2020.csv")
phase1_new_applicants <- read_csv("data/phase1-new-grad-applicants-2020.csv")
phase2_new_applicants <- read_csv("data/phase2-new-grad-applicants-2020.csv")
phase3_new_applicants <- read_csv("data/phase3-new-grad-applicants-2020.csv")
black_saber_current_employees
final_hires
phase1_new_applicants
phase2_new_applicants
phase3_new_applicants
final_hires %>% mutate(final_hired = 1)
final_hires %>% mutate(final_hired = fct(1))
final_hires %>% mutate(final_hired = 1)
merge(black_saber_current_employees, final_hires, by = "applicant_id", all = TRUE)
final_hires <- final_hires %>% mutate(final_hired = 1)
merge(black_saber_current_employees, final_hires, by = "applicant_id", all = TRUE)
merge(phase1_new_applicants, final_hires, by = "applicant_id", all = TRUE)
final_hires <- final_hires %>% mutate(final_hired = 1)
merge(phase1_new_applicants, final_hires, by = "applicant_id", all = TRUE)
phase1_new_applicants <- phase1_new_applicants %>% merge(final_hires, by = "applicant_id", all = TRUE)
final_hires <- final_hires %>% mutate(final_hired = 1)
phase1_new_applicants <- phase1_new_applicants %>% merge(final_hires, by = "applicant_id", all = TRUE) %>% ifelse(is.na(final_hired), final_hired = 0, final_hired)
phase1_new_applicants <- phase1_new_applicants %>% merge(final_hires, by = "applicant_id", all = TRUE) %>% ifelse(is.na(final_hired), final_hired = 0, final_hired = 1)
final_hires <- final_hires %>% mutate(final_hired = 1)
# If the applicant is hired, final_hired = 1, otherwise final_hired = NA.
phase1_new_applicants <- phase1_new_applicants %>% merge(final_hires, by = "applicant_id", all = TRUE)
phase2_new_applicants <- phase2_new_applicants %>% merge(final_hires, by = "applicant_id", all = TRUE)
phase3_new_applicants <- phase3_new_applicants %>% merge(final_hires, by = "applicant_id", all = TRUE)
black_saber_current_employees
black_saber_current_employees %>% ggplot(aes(x = role_seniority, y = salary)) + geom_point(aes(colour = gender))
black_saber_current_employees %>% ggplot(aes(x = role_seniority, y = salary)) + geom_boxplot(aes(colour = gender))
black_saber_current_employees %>% ggplot(aes(x = role_seniority, y = salary, colour = gender)) + geom_boxplot()
black_saber_current_employees %>% ggplot(aes(salary, colour = gender)) + geom_boxplot()
black_saber_current_employees %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot()
black_saber_current_employees$salary <- as.numeric(gsub('$','',black_saber_current_employees$salary))
black_saber_current_employees
black_saber_current_employees <- read_csv("data/black-saber-current-employees.csv")
final_hires <- read_csv("data/final-hires-newgrad_2020.csv")
phase1_new_applicants <- read_csv("data/phase1-new-grad-applicants-2020.csv")
phase2_new_applicants <- read_csv("data/phase2-new-grad-applicants-2020.csv")
phase3_new_applicants <- read_csv("data/phase3-new-grad-applicants-2020.csv")
black_saber_current_employees
black_saber_current_employees$salary <- as.numeric(gsub('[$,]','',black_saber_current_employees$salary))
black_saber_current_employees
black_saber_current_employees %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot()
black_saber_current_employees %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
black_saber_current_employees %>% filter(substr(financial_q, 1, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
substr("hi", 1, nchar("hi"))
substr("hi", 0, nchar("hi"))
substr("hi", -1, nchar("hi"))
black_saber_current_employees %>% filter(strtrim(financial_q, nchar(financial_q)-1) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
strtrim(financial_q, nchar(financial_q)-1)
strtrim("hi", nchar("hi")-1)
black_saber_current_employees %>% filter(strtrim(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
strtrim("hi", nchar("hi"))
black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
salary_by_gender_q1 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
salary_by_gender_q2 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
salary_by_gender_q3 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
salary_by_gender_q4 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
ggarrange(salary_by_gender_q1, salary_by_gender_q2, salary_by_gender_q3, salary_by_gender_q4, labels = c("Q1","Q2","Q3","Q4"), ncol = 2, nrow = 2)
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
#install.packages("ggpubr")
library(ggpubr)
#install.packages("ggpubr")
install.packages("ggplot2")
#install.packages("ggpubr")
#install.packages("ggplot2")
library(ggpubr)
#install.packages("ggpubr")
#install.packages("ggplot2")
library(ggpubr)
#install.packages("ggpubr")
install.packages("ggplot2")
#install.packages("ggpubr")
#install.packages("ggplot2")
library(ggpubr)
install.packages("gridExtra")
library(gridExtra)
(salary_by_gender_q1, salary_by_gender_q2, salary_by_gender_q3, salary_by_gender_q4, labels = c("Q1","Q2","Q3","Q4"), ncol = 2, nrow = 2)
grid.arrange(salary_by_gender_q1, salary_by_gender_q2)
salary_by_gender_q1 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
#install.packages("gridExtra")
#install.packages("ggplot2")
library(ggpubr)
#install.packages("gridExtra")
#install.packages("ggplot2")
library(tidyverse)
install.packages("tidyverse")
#install.packages("gridExtra")
#install.packages("tidyverse")
library(tidyverse)
# This chunk provides an example of some things you can do with RMarkdown to make your report creation process easier
# read in the data
black_saber_current_employees <- read_csv("data/black-saber-current-employees.csv")
#install.packages("gridExtra")
#install.packages("tidyverse")
library(tidyverse)
# this should supress all code and messages
knitr::opts_chunk$set(include=FALSE)
# This chunk provides an example of some things you can do with RMarkdown to make your report creation process easier
# read in the data
black_saber_current_employees <- read_csv("data/black-saber-current-employees.csv")
# create a visualisation
my_plot <- black_saber_current_employees %>%
ggplot(aes(x = productivity)) +
geom_histogram(colour = "grey", fill = "#6C3082") +
theme_minimal() +
labs(title = "Look! A title. But do you want a title or a caption for your report?", x = "Productivity")
# save your plot in your images folder, you can specify the height and width, too
# saving this means you can add the image to your exectuve summary without having to run or rerun the code, if you wish
ggsave("images/example.png", width = 7, height = 4)
# norice how the image is included with the ![](file/path.png) below
library(tidyverse)
library(lme4)
black_saber_current_employees <- read_csv("data/black-saber-current-employees.csv")
final_hires <- read_csv("data/final-hires-newgrad_2020.csv")
phase1_new_applicants <- read_csv("data/phase1-new-grad-applicants-2020.csv")
phase2_new_applicants <- read_csv("data/phase2-new-grad-applicants-2020.csv")
phase3_new_applicants <- read_csv("data/phase3-new-grad-applicants-2020.csv")
black_saber_current_employees
final_hires
phase1_new_applicants
phase2_new_applicants
phase3_new_applicants
black_saber_current_employees$salary <- as.numeric(gsub('[$,]','',black_saber_current_employees$salary))
final_hires <- final_hires %>% mutate(final_hired = 1)
# If the applicant is hired, final_hired = 1, otherwise final_hired = NA.
phase1_new_applicants <- phase1_new_applicants %>% merge(final_hires, by = "applicant_id", all = TRUE)
phase2_new_applicants <- phase2_new_applicants %>% merge(final_hires, by = "applicant_id", all = TRUE)
phase3_new_applicants <- phase3_new_applicants %>% merge(final_hires, by = "applicant_id", all = TRUE)
black_saber_current_employees
salary_by_gender_q1 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
salary_by_gender_q2 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
salary_by_gender_q3 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
salary_by_gender_q4 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
plot_grid(salary_by_gender_q1, salary_by_gender_q2, salary_by_gender_q3, salary_by_gender_q4, labels = c("Q1","Q2","Q3","Q4"), ncol = 2, nrow = 2)
library(cowplot)
library(cowplot)
plot_grid(salary_by_gender_q1, salary_by_gender_q2, salary_by_gender_q3, salary_by_gender_q4, labels = c("Q1","Q2","Q3","Q4"), ncol = 2, nrow = 2)
phase1_new_applicants
phase1_new_applicants %>% ggplot(aes(x = final_hired, y = gpa)) + geom_boxplot(aes(colour = final_hired))
phase1_new_applicants %>% ggplot(aes(gpa)) + geom_boxplot(aes(colour = final_hired))
phase1_new_applicants %>% ggplot(aes(x = final_hired, y = gpa)) + geom_boxplot(aes(colour = final_hired))
phase1_new_applicants %>% ggplot(aes(x = as.character(final_hired), y = gpa)) + geom_boxplot(aes(colour = final_hired))
phase1_new_applicants %>% ggplot(aes(x = as.character(final_hired), y = gpa)) + geom_boxplot()
phase2_new_applicants
phase2_new_applicants %>% ggplot(aes(x = as.character(final_hired), y = speaking_skills)) + geom_boxplot()
phase2_new_applicants %>% ggplot(aes(x = as.character(final_hired), y = writing_skills)) + geom_boxplot()
phase2_new_applicants %>% ggplot(aes(x = as.character(final_hired), y = technical_skills)) + geom_boxplot()
#install.packages("gridExtra")
#install.packages("tidyverse")
library(tidyverse)
library(cowplot)
# this should supress all code and messages
knitr::opts_chunk$set(include=FALSE,echo = TRUE)
# This chunk provides an example of some things you can do with RMarkdown to make your report creation process easier
# read in the data
black_saber_current_employees <- read_csv("data/black-saber-current-employees.csv")
# create a visualisation
my_plot <- black_saber_current_employees %>%
ggplot(aes(x = productivity)) +
geom_histogram(colour = "grey", fill = "#6C3082") +
theme_minimal() +
labs(title = "Look! A title. But do you want a title or a caption for your report?", x = "Productivity")
# save your plot in your images folder, you can specify the height and width, too
# saving this means you can add the image to your exectuve summary without having to run or rerun the code, if you wish
ggsave("images/example.png", width = 7, height = 4)
# norice how the image is included with the ![](file/path.png) below
library(tidyverse)
library(lme4)
black_saber_current_employees <- read_csv("data/black-saber-current-employees.csv")
final_hires <- read_csv("data/final-hires-newgrad_2020.csv")
phase1_new_applicants <- read_csv("data/phase1-new-grad-applicants-2020.csv")
phase2_new_applicants <- read_csv("data/phase2-new-grad-applicants-2020.csv")
phase3_new_applicants <- read_csv("data/phase3-new-grad-applicants-2020.csv")
black_saber_current_employees
final_hires
phase1_new_applicants
phase2_new_applicants
phase3_new_applicants
black_saber_current_employees$salary <- as.numeric(gsub('[$,]','',black_saber_current_employees$salary))
final_hires <- final_hires %>% mutate(final_hired = 1)
# If the applicant is hired, final_hired = 1, otherwise final_hired = NA.
phase1_new_applicants <- phase1_new_applicants %>% merge(final_hires, by = "applicant_id", all = TRUE)
phase2_new_applicants <- phase2_new_applicants %>% merge(final_hires, by = "applicant_id", all = TRUE)
phase3_new_applicants <- phase3_new_applicants %>% merge(final_hires, by = "applicant_id", all = TRUE)
salary_by_gender_q1 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
salary_by_gender_q2 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
salary_by_gender_q3 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
salary_by_gender_q4 <- black_saber_current_employees %>% filter(substring(financial_q, nchar(financial_q)) == '1') %>% ggplot(aes(x = gender, y = salary)) + geom_boxplot(aes(colour = gender))
gender_salary <- plot_grid(salary_by_gender_q1, salary_by_gender_q2, salary_by_gender_q3, salary_by_gender_q4, labels = c("Q1","Q2","Q3","Q4"), ncol = 2, nrow = 2)
ggsave("images/gender_salary.png", gender_salary)
black_saber_current_employees %>%
filter(financial_q == '2020 Q1') %>%
group_by(employee_id) %>%
ggplot(aes(x = productivity, y = salary, color = as.factor(leadership_for_level)))+
geom_point()
ggsave("images/leadership_salary_Q1.png", width = 7, height = 4)
black_saber_current_employees %>%
filter(financial_q == '2020 Q1') %>%
group_by(employee_id) %>%
ggplot(aes(x = productivity, y = salary, color = as.factor(role_seniority)))+
geom_point()
ggsave("images/level_salary_Q1.png", width = 7, height = 4)
black_saber_current_employees %>%
filter(financial_q == '2020 Q1') %>%
group_by(employee_id) %>%
ggplot(aes(x = productivity, y = salary, color = as.factor(gender)))+
geom_point()
ggsave("images/level_salary_Q1.png", width = 7, height = 4)
black_saber_current_employees %>%
filter(financial_q == '2020 Q4') %>%
filter(role_seniority == 'Entry-level') %>%
group_by(employee_id) %>%
ggplot(aes(x = team, y = salary, color = as.factor(gender)))+
geom_point()
#ggsave("images/leadership_salary_Q1.png", width = 7, height = 4)
black_saber_current_employees %>%
filter(financial_q == '2020 Q4') %>%
filter(role_seniority == 'Junior I') %>%
group_by(employee_id) %>%
ggplot(aes(x = team, y = salary, color = as.factor(gender)))+
geom_point()
black_saber_current_employees %>%
filter(financial_q == '2020 Q4') %>%
filter(role_seniority == 'Senior I') %>%
group_by(employee_id) %>%
ggplot(aes(x = team, y = salary, color = as.factor(gender)))+
geom_point()
black_saber_current_employees %>%
filter(financial_q == '2020 Q4') %>%
filter(role_seniority == 'Manager') %>%
group_by(employee_id) %>%
ggplot(aes(x = team, y = salary, color = as.factor(gender)))+
geom_point()
black_saber_current_employees %>%
group_by(employee_id) %>%
ggplot(aes(x = leadership_for_level, y = salary, color = as.factor(gender)))+
geom_point()
black_saber_current_employees %>%
group_by(employee_id) %>%
ggplot(aes(x = role_seniority, y = salary, color = as.factor(gender)))+
geom_point()
black_saber_current_employees %>%
group_by(employee_id) %>%
ggplot(aes(x = team, y = salary, color = as.factor(gender)))+
geom_point()
phase2_new_applicants
phase1_new_applicants %>% ggplot(aes(x = as.character(gender), y = gpa)) + geom_boxplot()
#ggsave("images/gpa_hiring.png", gpa_if_hired)
gpa_if_hired <- phase1_new_applicants %>% ggplot(aes(x = as.character(final_hired), y = gpa)) + geom_boxplot()
ggsave("images/gpa_hiring.png", gpa_if_hired)
#phase1_new_applicants %>% ggplot(aes(x = as.character(final_hired), y = gpa)) + geom_point()
phase2_new_applicants %>% ggplot(aes(x = as.character(final_hired), y = speaking_skills)) + geom_boxplot()
ggsave("images/speaking_hiring.png")
phase2_new_applicants %>% ggplot(aes(x = as.character(final_hired), y = writing_skills)) + geom_boxplot()
phase2_new_applicants %>% ggplot(aes(x = as.character(final_hired), y = technical_skills)) + geom_boxplot()
phase1_new_applicants %>%
filter(final_hired == '1') %>%
group_by(applicant_id) %>%
ggplot(aes(x = gender, y = gpa))+
geom_point()
phase2_new_applicants %>%
filter(final_hired == '1') %>%
group_by(applicant_id) %>%
ggplot(aes(x = gender, y = technical_skills))+
geom_point()
phase2_new_applicants %>%
filter(final_hired == '1') %>%
group_by(applicant_id) %>%
ggplot(aes(x = gender, y = writing_skills))+
geom_point()
phase2_new_applicants %>%
filter(final_hired == '1') %>%
group_by(applicant_id) %>%
ggplot(aes(x = gender, y = speaking_skills))+
geom_point()
View(black_saber_current_employees)
View(final_hires)
View(phase1_new_applicants)
